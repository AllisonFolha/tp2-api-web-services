openapi: 3.0.0
info:
  title: Plataforma de Streaming de Música API
  version: 1.0.0
  description: Uma API para gerenciar músicas, playlists, artistas e usuários.

paths:
  /usuarios:
    get:
      summary: Lista todos os usuários
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "usuarios": [...] }

    post:
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            example: { "nome_usuario": "novousuario", "email": "novousuario@email.com" }
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              example: { "mensagem": "Usuário criado com sucesso", "usuario": {...} }

  /usuarios/{usuarioId}:
    get:
      summary: Obtém detalhes de um usuário específico
      parameters:
        - name: usuarioId
          in: path
          required: true
          description: ID do usuário
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "usuario": {...} }

    put:
      summary: Atualiza um usuário existente
      parameters:
        - name: usuarioId
          in: path
          required: true
          description: ID do usuário
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: { "nome_usuario": "novonome" }
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              example: { "mensagem": "Usuário atualizado com sucesso", "usuario": {...} }

    delete:
      summary: Exclui um usuário
      parameters:
        - name: usuarioId
          in: path
          required: true
          description: ID do usuário
          schema:
            type: integer
      responses:
        '204':
          description: Usuário excluído com sucesso

  /usuarios/{usuarioId}/playlists:
    get:
      summary: Lista todas as playlists de um usuário
      parameters:
        - name: usuarioId
          in: path
          required: true
          description: ID do usuário
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "playlists": [...] }

    post:
      summary: Cria uma nova playlist para um usuário
      parameters:
        - name: usuarioId
          in: path
          required: true
          description: ID do usuário
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: { "titulo": "Nova Playlist" }
      responses:
        '201':
          description: Playlist criada com sucesso
          content:
            application/json:
              example: { "mensagem": "Playlist criada com sucesso", "playlist": {...} }

  /playlists/{playlistId}:
    get:
      summary: Obtém detalhes de uma playlist específica
      parameters:
        - name: playlistId
          in: path
          required: true
          description: ID da playlist
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "playlist": {...} }

    put:
      summary: Atualiza uma playlist existente
      parameters:
        - name: playlistId
          in: path
          required: true
          description: ID da playlist
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: { "titulo": "Novo Título" }
      responses:
        '200':
          description: Playlist atualizada com sucesso
          content:
            application/json:
              example: { "mensagem": "Playlist atualizada com sucesso", "playlist": {...} }

    delete:
      summary: Exclui uma playlist
      parameters:
        - name: playlistId
          in: path
          required: true
          description: ID da playlist
          schema:
            type: integer
      responses:
        '204':
          description: Playlist excluída com sucesso

  /musicas/{musicaId}:
    get:
      summary: Obtém detalhes de uma música específica
      parameters:
        - name: musicaId
          in: path
          required: true
          description: ID da música
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "musica": {...} }

    put:
      summary: Atualiza uma música existente
      parameters:
        - name: musicaId
          in: path
          required: true
          description: ID da música
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: { "titulo": "Novo Título" }
      responses:
        '200':
          description: Música atualizada com sucesso
          content:
            application/json:
              example: { "mensagem": "Música atualizada com sucesso", "musica": {...} }

    delete:
      summary: Exclui uma música
      parameters:
        - name: musicaId
          in: path
          required: true
          description: ID da música
          schema:
            type: integer
      responses:
        '204':
          description: Música excluída com sucesso

  /artistas:
    get:
      summary: Lista todos os artistas
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "artistas": [...] }

    post:
      summary: Cria um novo artista
      requestBody:
        required: true
        content:
          application/json:
            example: { "nome": "Novo Artista" }
      responses:
        '201':
          description: Artista criado com sucesso
          content:
            application/json:
              example: { "mensagem": "Artista criado com sucesso", "artista": {...} }

  /artistas/{artistaId}:
    get:
      summary: Obtém detalhes de um artista específico
      parameters:
        - name: artistaId
          in: path
          required: true
          description: ID do artista
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: { "artista": {...} }

    put:
      summary: Atualiza um artista existente
      parameters:
        - name: artistaId
          in: path
          required: true
          description: ID do artista
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: { "nome": "Novo Nome do Artista" }
      responses:
        '200':
          description: Artista atualizado com sucesso
          content:
            application/json:
              example: { "mensagem": "Artista atualizado com sucesso", "artista": {...} }

    delete:
      summary: Exclui um artista
      parameters:
        - name: artistaId
          in: path
          required: true
          description: ID do artista
          schema:
            type: integer
      responses:
        '204':
          description: Artista excluído com sucesso
